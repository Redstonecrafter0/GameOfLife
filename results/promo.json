{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Function 'update' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/Texture.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 8,
      "length": 6,
      "code": {
        "startLine": 18,
        "length": 6,
        "offset": 15,
        "surroundingCode": "    }\n\n    fun update(data: ByteBuffer) {\n        glTexImage2D(GL_TEXTURE_2D, 0, format, width, height, 0, format, GL_UNSIGNED_BYTE, data)\n    }"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "-667217126084604709"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Property 'width' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/Texture.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 41,
      "length": 5,
      "code": {
        "startLine": 8,
        "length": 5,
        "offset": 69,
        "surroundingCode": "import java.nio.ByteBuffer\n\nopen class Texture(data: ByteBuffer, val width: Int, val height: Int, val format: Int = GL_RGBA) : Pointed {\n\n    constructor(img: BufferedImage, width: Int, height: Int) : this(img.toRawData(), width, height)"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "-7838246697164739356"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Property 'height' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/Texture.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 57,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 85,
        "surroundingCode": "import java.nio.ByteBuffer\n\nopen class Texture(data: ByteBuffer, val width: Int, val height: Int, val format: Int = GL_RGBA) : Pointed {\n\n    constructor(img: BufferedImage, width: Int, height: Int) : this(img.toRawData(), width, height)"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "916123556367109977"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Property 'format' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/Texture.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 74,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 102,
        "surroundingCode": "import java.nio.ByteBuffer\n\nopen class Texture(data: ByteBuffer, val width: Int, val height: Int, val format: Int = GL_RGBA) : Pointed {\n\n    constructor(img: BufferedImage, width: Int, height: Int) : this(img.toRawData(), width, height)"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "6297573461001139415"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Info",
  "comment": "Function 'bind' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/Texture.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 8,
      "length": 4,
      "code": {
        "startLine": 14,
        "length": 4,
        "offset": 52,
        "surroundingCode": "    override val pointer = glGenTextures()\n\n    fun bind() {\n        glBindTexture(GL_TEXTURE_2D, pointer)\n    }"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "-6740618195025258005"
}]}