{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: x",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/SDFFontRenderer.kt",
      "language": "kotlin",
      "line": 115,
      "offset": 55,
      "length": 1,
      "code": {
        "startLine": 113,
        "length": 1,
        "offset": 135,
        "surroundingCode": "                val g2d = cImg.createGraphics()\n                g2d.font = font\n                charsMap[char.code] = Glyph(char.code, x, y, height, width, bearingX, bearingY, g2d.fontMetrics.charWidth(char))\n            }\n            val fBuffer = ByteArray(4096 * 4096 * 4) { 0 }"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-4155411981549254588"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: y",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/SDFFontRenderer.kt",
      "language": "kotlin",
      "line": 115,
      "offset": 58,
      "length": 1,
      "code": {
        "startLine": 113,
        "length": 1,
        "offset": 138,
        "surroundingCode": "                val g2d = cImg.createGraphics()\n                g2d.font = font\n                charsMap[char.code] = Glyph(char.code, x, y, height, width, bearingX, bearingY, g2d.fontMetrics.charWidth(char))\n            }\n            val fBuffer = ByteArray(4096 * 4096 * 4) { 0 }"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-4967979896833107427"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: height",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/SDFFontRenderer.kt",
      "language": "kotlin",
      "line": 115,
      "offset": 61,
      "length": 6,
      "code": {
        "startLine": 113,
        "length": 6,
        "offset": 141,
        "surroundingCode": "                val g2d = cImg.createGraphics()\n                g2d.font = font\n                charsMap[char.code] = Glyph(char.code, x, y, height, width, bearingX, bearingY, g2d.fontMetrics.charWidth(char))\n            }\n            val fBuffer = ByteArray(4096 * 4096 * 4) { 0 }"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8747636718539070407"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "[UNRESOLVED_REFERENCE] Unresolved reference: width",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "src/main/kotlin/net/redstonecraft/opengl/render/SDFFontRenderer.kt",
      "language": "kotlin",
      "line": 115,
      "offset": 69,
      "length": 5,
      "code": {
        "startLine": 113,
        "length": 5,
        "offset": 149,
        "surroundingCode": "                val g2d = cImg.createGraphics()\n                g2d.font = font\n                charsMap[char.code] = Glyph(char.code, x, y, height, width, bearingX, bearingY, g2d.fontMetrics.charWidth(char))\n            }\n            val fBuffer = ByteArray(4096 * 4096 * 4) { 0 }"
      }
    }
  ],
  "attributes": {
    "module": "gameoflife",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-4437154613067576682"
}]}